step-by-step:

client-side (create folder client)
1. install react.js vite and tailwind css (template)

2. create pages and routes: 
	install react router dom package: create routes inside application
	create folder pages and create files

3. create header section
	create component folder
	have 3 section in header (logo, search, menu)
	install react icons package
	very easy to adjust responsiveness in tailwind (set mobile first, then after mobile do larger screen)
	import Link to bring user from one to another page without refreshing the page


server-side (create folder api)
4. create and run the server
	initialize a package json, in the root of project, not in the api folder
	create file index.js
	install express
	install nodemon (for auto refresh application everytime i save the file)
	run 'npm run dev' to test the application

5. connect to database
	install package mongoose (back end always in the root project)
	create database on mongodb.com, choose the "free" plan, don't forget to set username, password, ip address.
	click connect and copy paste the uri
	install package dotenv to hide important variables, such as password.
	add feedback to know if already connected or not, using "then" such as console.log("connected to db"), if error using "catch"
	
6. create user model
  	create folder models
  	create file.models.js
  	add 3 models: username, email, password
	add timestamps

7. create a test api route
	create seperate folder for api routes called "routes"
	create file user.route.js 
	create folder controllers for the logics and functions to be call in another files, such as route

8. create sign-up  api route
  authentication is important => create file auth.route.js inside routes folder
  create file auth.controller.js
  test api using postman
  install package bcrypt

9. create a middleware and a function to handle possible errors
 make  in index.js so "try and catch" code not repetitive
 handle errors: create folder "utils" in "api" folder and create file "error.js"
